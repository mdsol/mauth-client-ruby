# All scenarios outlined below are manual.

# The conf variable is used when starting an application.
# For example, in Balance, the config/environment.rb file contains the following (with different app_uuid and private_key):
#
# conf = {
#     :mauth_baseurl => 'https://mauth-sandbox.imedidata.net',
#     :app_uuid => "91111111-1111-1111-1111-111111111111",
#     :private_key => "QpeIisdvU9AJC15wkLf83xDPiCFaTL6r8iQY56nZqaqp0yTfJVKAgtOqdGyAOyVDd9b2Uz8ZukiyXR5H56JLEg==",
#     :version => 'v1'
# }
# config.middleware.use "Medidata::MAuthMiddleware", conf
#
# This then creates a new rack-mauth middleware with the configuration detailed in conf. More information about
# rack-mauth configuration is available on Medinet at
# https://sites.google.com/a/mdsol.com/knowledgebase/home/departments/engineering/on-demand-portfolio/services/core-services/mauth/rack-mauth
#
# The first parameter of conf is the URL of the server with which rack-mauth will attempt to communicate
# in order to authenticate requests. For most of the tests below, the use of mauth-sandbox is needed.
#
# Make sure that the app_uuid and private_key are the same on the cloud and in the configuration file. If you are using
# mauth-sandbox to authenticate, your app_uuid should the filename in the bucket called 'mauth-development', and in the
# folder 'production/security_tokens', and the details of the token, including private key are inside the file. For example,
# /mauth-development/production/security_tokens/91111111-1111-1111-1111-111111111111 will contain the private key for that app.
#
# Once the application using rack-mauth has been configured and started, we will need some way to generate signed HTTP headers.
#
# -Open example.rb and add your app_uuid and private key.
#
# -Identify a route that the application uses. For example, /api/v2/user/.
#
# -Replace one of the simple request with the parameters needed for the test. Most likely, the application using rack-mauth was
# started with default values, therefore you would have
# simple_request "http://localhost:3000", '/api/v2/user/'
#
# -Save and exit the file
#
# -Run `ruby example.rb` from the command line. The signed headers are printed, as well a curl command.
#
# We are now ready to test. Copy and past the curl command and press enter to send the request to your application using rack-mauth
#
#
Scenario_1: No version is configured for rack-mauth, and local authentication is attempted
--should raise error on server
conf = {
    :mauth_baseurl => 'https://mauth-sandbox.imedidata.net',
    :private_key => "QpeIisdvU9AJC15wkLf83xDPiCFaTL6r8iQY56nZqaqp0yTfJVKAgtOqdGyAOyVDd9b2Uz8ZukiyXR5H56JLEg==",
  }

Scenario_2: version not supported by mauth is specified in the environment config. of the application using rack-mauth.
--should raise 401
conf = {
    :mauth_baseurl => 'https://mauth-sandbox.imedidata.net',
    :app_uuid => "91111111-1111-1111-1111-111111111111",
    :private_key => "QpeIisdvU9AJC15wkLf83xDPiCFaTL6r8iQY56nZqaqp0yTfJVKAgtOqdGyAOyVDd9b2Uz8ZukiyXR5H56JLEg==",
    :version => 'spoon/fork/cuttlery',
  }

Scenario_3: No base_url is configured for rack-mauth
--should raise error on server
conf = {
    :app_uuid => "91111111-1111-1111-1111-111111111111",
    :private_key => "QpeIisdvU9AJC15wkLf83xDPiCFaTL6r8iQY56nZqaqp0yTfJVKAgtOqdGyAOyVDd9b2Uz8ZukiyXR5H56JLEg==",
    :version => 'v1',
  }

Scenario_4: No app_uuid is configured for rack-mauth while attempting to perform local authentication
--should revert to using remote authentication
conf = {
    :mauth_baseurl => 'https://mauth-sandbox.imedidata.net',
    :private_key => "QpeIisdvU9AJC15wkLf83xDPiCFaTL6r8iQY56nZqaqp0yTfJVKAgtOqdGyAOyVDd9b2Uz8ZukiyXR5H56JLEg==",
    :version => 'v1',
  }

Scenario_5: No private_key is configured for rack-mauth while attempting to perform local authentication
--should revert to using remote authentication
conf = {
    :mauth_baseurl => 'https://mauth-sandbox.imedidata.net',
    :app_uuid => "91111111-1111-1111-1111-111111111111",
    :version => 'v1',
  }

Scenario_6: Incorrect app_uuid is configured for rack-mauth while attempting to perform local  authentication
--should return 401
conf = {
    :mauth_baseurl => 'https://mauth-sandbox.imedidata.net',
    :app_uuid => "%#^&#91111111-1111-1111-1111-111111111111",
    :private_key => "QpeIisdvU9AJC15wkLf83xDPiCFaTL6r8iQY56nZqaqp0yTfJVKAgtOqdGyAOyVDd9b2Uz8ZukiyXR5H56JLEg==",
    :version => 'v1',
  }

Scenario_7: Incorrect private_key is configured for rack-mauth while attempting to perform local authentication
--should return 401
conf = {
    :mauth_baseurl => 'https://mauth-sandbox.imedidata.net',
    :app_uuid => "91111111-1111-1111-1111-111111111111",
    :private_key => "$^&*$^*&^$QpeIisdvU9AJC15wkLf83xDPiCFaTL6r8iQY56nZqaqp0yTfJVKAgtOqdGyAOyVDd9b2Uz8ZukiyXR5H56JLEg==",
    :version => 'v1',
  }

Scenario_8: mAuth is down and the app boots and a request arrives
--should return 401
  Can be simulated by :mauth_baseurl => 'http://server_is_down.com'

Scenario_9: An app_uuid was locally authorized by rack-mauth becomes authorized on the next token_refresh
--should return 401
conf = {
    :mauth_baseurl => 'https://mauth-sandbox.imedidata.net',
    :app_uuid => "91111111-1111-1111-1111-111111111111",
    :private_key => "QpeIisdvU9AJC15wkLf83xDPiCFaTL6r8iQY56nZqaqp0yTfJVKAgtOqdGyAOyVDd9b2Uz8ZukiyXR5H56JLEg==",
    :version => 'v1'
  }
  Delete or change app_uuid on server

Scenario_10: An error is thrown if mauth_baseurl is incorrect
--should raise error on server
conf = {
    :mauth_baseurl => 'https://',
    :app_uuid => "91111111-1111-1111-1111-111111111111",
    :private_key => "QpeIisdvU9AJC15wkLf83xDPiCFaTL6r8iQY56nZqaqp0yTfJVKAgtOqdGyAOyVDd9b2Uz8ZukiyXR5H56JLEg==",
    :version => 'v1',
  }

Scenario_11: Remote authentication authentication succeeds
--should return an service api error, not a rack-mauth or mauth error
conf = {
    :mauth_baseurl => 'https://mauth-sandbox.imedidata.net',
    :app_uuid => "91111111-1111-1111-1111-111111111111",
    :private_key => "QpeIisdvU9AJC15wkLf83xDPiCFaTL6r8iQY56nZqaqp0yTfJVKAgtOqdGyAOyVDd9b2Uz8ZukiyXR5H56JLEg==",
    :version => 'v1'
  }
