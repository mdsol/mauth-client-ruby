= rack-mauth

This gem is a wrapper around the middleware called rack-mauth which rack applications can use to authenticate incoming requests signed with the mAuth HMAC protocol.

== Installation

Use the bundler gem (sudo gem install bundler).  Add the following to your Gemfile:

  gem 'rack-mauth', '0.0.1', :git => "git@github.com:mdsol/rack-mauth.git", :require => 'rack/mauth'
  gem 'mauth_signer'

== Usage

If adding to a Rails application, update your environment.rb file as follows:

  Rails::Initializer.run do |config|
    conf = {
      :mauth_baseurl => 'https://mauth-sandbox.imedidata.net',
      :app_uuid => "your app's uuid from mAuth",
      :private_key => "your app's shared secret from mAuth",
      :path_whitelist => [/^\/v2\/api/, /^\/api\/v2/],
      :whitelist_exceptions => [/^\/v2\/api\/request_tokens\.json/, /^\/api\/v2\/request_tokens\.json/]
    }
    config.middleware.use "Medidata::MAuthMiddleware", conf
  end

The mauth_baseurl is required in the conf hash.  The private_key and app_uuid enable local authentication.  They'll only work if the app_uuid has permission to request private keys from mAuth.  Authentication won't work if the private_key and app_uuid are provided but the application doesn't have permission in mAuth to request private keys.  If app_uuid and/or private_key is not provided, rack-mauth will make a call to mAuth in order to authenticate remotely.  Remote authentication requires more time than local authentication.

The path_whitelist is an optional configuration parameter specifying an array of one or more regular expressions which define the application URLs which rack-mauth should authenticate.  If a request URL matches one or more regular expressions in the path_whitelist, the request will be authenticated by rack-mauth.  If no path_whitelist is defined, all incoming requests will be authenticated by rack-mauth.  The whitelist_exceptions parameter is also optional and specifies those URLs which, though they might match a regular expression in the path_whitelist, should NOT be authenticated by rack-mauth.

When doing local authentication, rack-mauth will periodically fetch shared secrets from mAuth.  Currently, the fetch occurs every 60 seconds beginning on startup.

When rack-mauth determines that a request is inauthentic, it will return a 401 status code to the requesting application along with the plain text message "Unauthorized".  Authenticated requests will be passed to the application using rack-mauth as middleware, as will requests which do not match any regular expression in the path_whitelist (if the path_whitelist is specified).

== Warning

During development, classes are typically not cached in Rails applications.  If this is the case, be aware that the rack-mauth middleware object will be instantiated anew for each request; this will cause applications performing local authentication to fetch security tokens before each request is authenticated.